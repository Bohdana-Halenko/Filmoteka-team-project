{"version":3,"sources":["webpack://darkmode-js/src/index.js","webpack://darkmode-js/webpack/universalModuleDefinition","webpack://darkmode-js/webpack/bootstrap","webpack://darkmode-js/src/darkmode.js","js/darkOn.js"],"names":["IS_BROWSER","window","Darkmode","options","Object","assign","css","mixColor","time","right","bottom","left","buttonColorDark","buttonColorLight","backgroundColor","layer","document","createElement","button","background","innerHTML","label","classList","add","darkmodeActivated","localStorage","getItem","preferedThemeOs","autoMatchOsTheme","matchMedia","matches","darkmodeNeverActivatedByAction","saveInCookies","body","insertBefore","firstChild","addStyle","linkElement","setAttribute","encodeURIComponent","head","appendChild","parseFloat","remove","addEventListener","isDarkmode","isActivated","removeAttribute","toggle","setItem","contains","showWidget","darkmode"],"mappings":"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","file":"darkOn.77b64903.js","sourceRoot":"../src","sourcesContent":["import Darkmode, { IS_BROWSER } from './darkmode';\r\nexport default Darkmode;\r\n\r\n/* eslint-disable */\r\nif (IS_BROWSER) {\r\n  (function(window) {\r\n    window.Darkmode = Darkmode;\r\n  })(window);\r\n}\r\n/* eslint-enable */\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"darkmode-js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"darkmode-js\"] = factory();\n\telse\n\t\troot[\"darkmode-js\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export const IS_BROWSER = typeof window !== 'undefined';\n\nexport default class Darkmode {\n  constructor(options) {\n    if (!IS_BROWSER) {\n      return;\n    }\n\n    const defaultOptions = {\n      bottom: '32px',\n      right: '32px',\n      left: 'unset',\n      time: '0.3s',\n      mixColor: '#fff',\n      backgroundColor: '#fff',\n      buttonColorDark: '#100f2c',\n      buttonColorLight: '#fff',\n      label: '',\n      saveInCookies: true,\n      autoMatchOsTheme: true\n    };\n\n    options = Object.assign({}, defaultOptions, options);\n\n    const css = `\n      .darkmode-layer {\n        position: fixed;\n        pointer-events: none;\n        background: ${options.mixColor};\n        transition: all ${options.time} ease;\n        mix-blend-mode: difference;\n      }\n\n      .darkmode-layer--button {\n        width: 2.9rem;\n        height: 2.9rem;\n        border-radius: 50%;\n        right: ${options.right};\n        bottom: ${options.bottom};\n        left: ${options.left};\n      }\n\n      .darkmode-layer--simple {\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        transform: scale(1) !important;\n      }\n\n      .darkmode-layer--expanded {\n        transform: scale(100);\n        border-radius: 0;\n      }\n\n      .darkmode-layer--no-transition {\n        transition: none;\n      }\n\n      .darkmode-toggle {\n        background: ${options.buttonColorDark};\n        width: 3rem;\n        height: 3rem;\n        position: fixed;\n        border-radius: 50%;\n        border:none;\n        right: ${options.right};\n        bottom: ${options.bottom};\n        left: ${options.left};\n        cursor: pointer;\n        transition: all 0.5s ease;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .darkmode-toggle--white {\n        background: ${options.buttonColorLight};\n      }\n\n      .darkmode-toggle--inactive {\n        display: none;\n      }\n\n      .darkmode-background {\n        background: ${options.backgroundColor};\n        position: fixed;\n        pointer-events: none;\n        z-index: -10;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n      }\n\n      img, .darkmode-ignore {\n        isolation: isolate;\n        display: inline-block;\n      }\n\n      @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n        .darkmode-toggle {display: none !important}\n      }\n\n      @supports (-ms-ime-align:auto), (-ms-accelerator:true) {\n        .darkmode-toggle {display: none !important}\n      }\n    `;\n\n    const layer = document.createElement('div');\n    const button = document.createElement('button');\n    const background = document.createElement('div');\n\n    button.innerHTML = options.label;\n    button.classList.add('darkmode-toggle--inactive');\n    layer.classList.add('darkmode-layer');\n    background.classList.add('darkmode-background');\n\n    const darkmodeActivated =\n      window.localStorage.getItem('darkmode') === 'true';\n    const preferedThemeOs =\n      options.autoMatchOsTheme &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const darkmodeNeverActivatedByAction =\n      window.localStorage.getItem('darkmode') === null;\n\n    if (\n      (darkmodeActivated === true && options.saveInCookies) ||\n      (darkmodeNeverActivatedByAction && preferedThemeOs)\n    ) {\n      layer.classList.add(\n        'darkmode-layer--expanded',\n        'darkmode-layer--simple',\n        'darkmode-layer--no-transition'\n      );\n      button.classList.add('darkmode-toggle--white');\n      document.body.classList.add('darkmode--activated');\n    }\n\n    document.body.insertBefore(button, document.body.firstChild);\n    document.body.insertBefore(layer, document.body.firstChild);\n    document.body.insertBefore(background, document.body.firstChild);\n\n    this.addStyle(css);\n\n    this.button = button;\n    this.layer = layer;\n    this.saveInCookies = options.saveInCookies;\n    this.time = options.time;\n  }\n\n  addStyle(css) {\n    const linkElement = document.createElement('link');\n\n    linkElement.setAttribute('rel', 'stylesheet');\n    linkElement.setAttribute('type', 'text/css');\n    linkElement.setAttribute(\n      'href',\n      'data:text/css;charset=UTF-8,' + encodeURIComponent(css)\n    );\n    document.head.appendChild(linkElement);\n  }\n\n  showWidget() {\n    if (!IS_BROWSER) {\n      return;\n    }\n    const button = this.button;\n    const layer = this.layer;\n    const time = parseFloat(this.time) * 1000;\n\n    button.classList.add('darkmode-toggle');\n    button.classList.remove('darkmode-toggle--inactive');\n    button.setAttribute(\"aria-label\", \"Activate dark mode\");\n    button.setAttribute(\"aria-checked\", \"false\");\n    button.setAttribute(\"role\", \"checkbox\");\n    layer.classList.add('darkmode-layer--button');\n\n    button.addEventListener('click', () => {\n      const isDarkmode = this.isActivated();\n\n      if (!isDarkmode) {\n        layer.classList.add('darkmode-layer--expanded');\n        button.setAttribute('disabled', true);\n        setTimeout(() => {\n          layer.classList.add('darkmode-layer--no-transition');\n          layer.classList.add('darkmode-layer--simple');\n          button.removeAttribute('disabled');\n        }, time);\n      } else {\n        layer.classList.remove('darkmode-layer--simple');\n        button.setAttribute('disabled', true);\n        setTimeout(() => {\n          layer.classList.remove('darkmode-layer--no-transition');\n          layer.classList.remove('darkmode-layer--expanded');\n          button.removeAttribute('disabled');\n        }, 1);\n      }\n\n      button.classList.toggle('darkmode-toggle--white');\n      document.body.classList.toggle('darkmode--activated');\n      window.localStorage.setItem('darkmode', !isDarkmode);\n    });\n  }\n\n  toggle() {\n    if (!IS_BROWSER) {\n      return;\n    }\n    const layer = this.layer;\n    const isDarkmode = this.isActivated();\n    const button = this.button;\n\n    layer.classList.toggle('darkmode-layer--simple');\n    document.body.classList.toggle('darkmode--activated');\n    window.localStorage.setItem('darkmode', !isDarkmode);\n    button.setAttribute(\"aria-label\", \"De-activate dark mode\");\n    button.setAttribute(\"aria-checked\", \"true\");\n\n  }\n\n  isActivated() {\n    if (!IS_BROWSER) {\n      return null;\n    }\n    return document.body.classList.contains('darkmode--activated');\n  }\n}\n","import Darkmode from 'darkmode-js';\n\nnew Darkmode().showWidget();\n\n\n\nconst options = {\n  bottom: '95px', // default: '32px'\n  left: '32px', // default: 'unset'\n  time: '0.5s', // default: '0.3s'\n  mixColor: '#fff', // default: '#fff'\n  backgroundColor: '#fff',  // default: '#fff'\n  buttonColorDark: 'gray',  // default: '#100f2c'\n  buttonColorLight: '#fff', // default: '#fff'\n  saveInCookies: false, // default: true,\n    autoMatchOsTheme: true, // default: true\n}\n\nconst darkmode = new Darkmode(options);\ndarkmode.showWidget();\n\n\n\n\n\n"]}